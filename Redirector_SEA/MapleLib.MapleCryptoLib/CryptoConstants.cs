namespace MapleLib.MapleCryptoLib
{
    using System;

    public class CryptoConstants
    {
        public static byte[] bDefaultAESKeyValue = new byte[] { 0xc6, 80, 0x53, 0xf2, 0xa8, 0x42, 0x9d, 0x7f, 0x77, 9, 0x1d, 0x26, 0x42, 0x53, 0x88, 0x7c };
        public static byte[] bShuffle = new byte[] { 
            0xec, 0x3f, 0x77, 0xa4, 0x45, 0xd0, 0x71, 0xbf, 0xb7, 0x98, 0x20, 0xfc, 0x4b, 0xe9, 0xb3, 0xe1, 
            0x5c, 0x22, 0xf7, 12, 0x44, 0x1b, 0x81, 0xbd, 0x63, 0x8d, 0xd4, 0xc3, 0xf2, 0x10, 0x19, 0xe0, 
            0xfb, 0xa1, 110, 0x66, 0xea, 0xae, 0xd6, 0xce, 6, 0x18, 0x4e, 0xeb, 120, 0x95, 0xdb, 0xba, 
            0xb6, 0x42, 0x7a, 0x2a, 0x83, 11, 0x54, 0x67, 0x6d, 0xe8, 0x65, 0xe7, 0x2f, 7, 0xf3, 170, 
            0x27, 0x7b, 0x85, 0xb0, 0x26, 0xfd, 0x8b, 0xa9, 250, 190, 0xa8, 0xd7, 0xcb, 0xcc, 0x92, 0xda, 
            0xf9, 0x93, 0x60, 0x2d, 0xdd, 210, 0xa2, 0x9b, 0x39, 0x5f, 130, 0x21, 0x4c, 0x69, 0xf8, 0x31, 
            0x87, 0xee, 0x8e, 0xad, 140, 0x6a, 0xbc, 0xb5, 0x6b, 0x59, 0x13, 0xf1, 4, 0, 0xf6, 90, 
            0x35, 0x79, 0x48, 0x8f, 0x15, 0xcd, 0x97, 0x57, 0x12, 0x3e, 0x37, 0xff, 0x9d, 0x4f, 0x51, 0xf5, 
            0xa3, 0x70, 0xbb, 20, 0x75, 0xc2, 0xb8, 0x72, 0xc0, 0xed, 0x7d, 0x68, 0xc9, 0x2e, 13, 0x62, 
            70, 0x17, 0x11, 0x4d, 0x6c, 0xc4, 0x7e, 0x53, 0xc1, 0x25, 0xc7, 0x9a, 0x1c, 0x88, 0x58, 0x2c, 
            0x89, 220, 2, 100, 0x40, 1, 0x5d, 0x38, 0xa5, 0xe2, 0xaf, 0x55, 0xd5, 0xef, 0x1a, 0x7c, 
            0xa7, 0x5b, 0xa6, 0x6f, 0x86, 0x9f, 0x73, 230, 10, 0xde, 0x2b, 0x99, 0x4a, 0x47, 0x9c, 0xdf, 
            9, 0x76, 0x9e, 0x30, 14, 0xe4, 0xb2, 0x94, 160, 0x3b, 0x34, 0x1d, 40, 15, 0x36, 0xe3, 
            0x23, 180, 3, 0xd8, 0x90, 200, 60, 0xfe, 0x5e, 50, 0x24, 80, 0x1f, 0x3a, 0x43, 0x8a, 
            150, 0x41, 0x74, 0xac, 0x52, 0x33, 240, 0xd9, 0x29, 0x80, 0xb1, 0x16, 0xd3, 0xab, 0x91, 0xb9, 
            0x84, 0x7f, 0x61, 30, 0xcf, 0xc5, 0xd1, 0x56, 0x3d, 0xca, 0xf4, 5, 0xc6, 0xe5, 8, 0x49
         };
        public static byte[] UserKey = new byte[] { 
            0x13, 0, 0, 0, 8, 0, 0, 0, 6, 0, 0, 0, 180, 0, 0, 0, 
            0x1b, 0, 0, 0, 15, 0, 0, 0, 0x33, 0, 0, 0, 0x52, 0, 0, 0
         };
        public static byte[] WZ_GMSIV = new byte[] { 0x4d, 0x23, 0xc7, 0x2b };
        public static uint WZ_OffsetConstant = 0x581c3f6d;

        public static byte[] getTrimmedUserKey()
        {
            byte[] buffer = new byte[0x20];
            for (int i = 0; i < 0x80; i += 0x10)
            {
                buffer[i / 4] = UserKey[i];
            }
            return buffer;
        }
    }
}

